buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

plugins {
    id 'org.asciidoctor.convert' version '1.5.3'
}

version "2.0.0.BUILD-SNAPSHOT"
group "org.grails.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin: 'codenarc'

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    provided "org.grails:grails-plugin-domain-class"
    profile "org.grails.profiles:web-plugin"
    testRuntime "com.h2database:h2"
    testRuntime "org.apache.tomcat:tomcat-jdbc"
    provided "org.grails:grails-plugin-services"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}
// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false
grailsPublish {
    userOrg = 'grails'
    githubSlug = 'grails-plugins/gorm-logical-delete'
    license {
        name = 'Apache-2.0'
    }
    title = 'GORM Logical Delete'
    desc = 'Adds logical delete capabilities to GORM'
    developers = [jeffbrown: "Jeff Scott Brown"]
}

groovydoc.docTitle = "GORM Logical Delete ${project.version}"
groovydoc.destinationDir = new File(buildDir, 'docs/api')

asciidoctor.outputDir = new File(buildDir, 'docs')
asciidoctor.separateOutputDirs = false

asciidoctor {

    attributes 'experimental'  : 'true',
            'compat-mode'   : 'true',
            'toc'           : 'left',
            'icons'         : 'font',
            'version'       : project.version
}

task docs(dependsOn:[groovydoc, asciidoctor])

codenarc {
    configFile file('config/codenarc/codenarc.groovy')
    sourceSets = [sourceSets.main]
}
